From c07ecb49255207a5eb66d1a6040305a20145817e Mon Sep 17 00:00:00 2001
From: "Colin B. Macdonald" <macdonald@maths.ox.ac.uk>
Date: Thu, 26 Jun 2014 21:25:04 +0100
Subject: [PATCH] clean up some debug messages

---
 src/evdev.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

diff --git a/src/evdev.c b/src/evdev.c
index b124d96..89aae91 100644
--- a/src/evdev.c
+++ b/src/evdev.c
@@ -1242,7 +1242,6 @@ EvdevAddAbsValuatorClass(DeviceIntPtr device, int want_scroll_axes)
         goto out;
 
 #ifdef MULTITOUCH
-    xf86IDrvMsg(pInfo, X_INFO, "debug: looping over MT axes\n");
     /* Loop over absolute multitouch axes.  Generate fake axes for
        ABS_X etc if kernel doesn't provide.  Adjust the mapping
        between for double-counting between ABS_X and ABS_MT_POSITION_X
@@ -1254,8 +1253,6 @@ EvdevAddAbsValuatorClass(DeviceIntPtr device, int want_scroll_axes)
             int j;
             Bool skip = FALSE;
 
-            xf86IDrvMsg(pInfo, X_INFO, "debug: axis=%d: label=%s\n", axis, abs_labels[axis]);
-
             /* Loop over the MT->legacy axis mapping table:
                1. if find both ABS_X_POSITION_X and ABS_X: setup mapping
                2. if find ABS_X_POSITION_X but not ABS_X: the kernel
@@ -1282,7 +1279,7 @@ EvdevAddAbsValuatorClass(DeviceIntPtr device, int want_scroll_axes)
                             goto out;
                         }
                         xf86IDrvMsg(pInfo, X_WARNING,
-                                    "Faking %s [%d] as a copy of axis %s [%d]\n",
+                                    "Faking '%s' (#%d) as a copy of axis '%s' (#%d)\n",
                                     abs_labels[mt_axis_mappings[j].code],
                                     mt_axis_mappings[j].code,
                                     abs_labels[axis], axis);
@@ -1291,7 +1288,6 @@ EvdevAddAbsValuatorClass(DeviceIntPtr device, int want_scroll_axes)
                     /* (now) have ABS_MT_POSITION_X and ABS_X: setup the mapping */
                     mt_axis_mappings[j].needs_mapping = TRUE;
                     skip = TRUE;
-                    xf86IDrvMsg(pInfo, X_INFO, "debug: axis=%d    j=%d, mapped code, SKIP. \t num_axes=%d, num_mt_axes=%d\n", axis, j, num_axes, num_mt_axes);
                 }
             }
 
@@ -1304,7 +1300,7 @@ EvdevAddAbsValuatorClass(DeviceIntPtr device, int want_scroll_axes)
             num_axes--;
         }
     }
-    xf86IDrvMsg(pInfo, X_INFO, "debug: num_axes=%d, num_mt_axes=%d\n", num_axes, num_mt_axes);
+    xf86IDrvMsg(pInfo, X_INFO, "Have %d multitouch, %d non-multitouch axes\n", num_mt_axes, num_axes);
 
     /* Even after faking ABS_X etc, we still only have mt-axes!
        Shouldn't happen any more even if kernel doesn't give ABS_X.
