=== modified file 'src/wizardpen.c'
--- src/wizardpen.c	2010-03-27 14:38:25 +0000
+++ src/wizardpen.c	2011-04-24 14:37:23 +0000
@@ -90,6 +90,18 @@
 /* max number of input events to read in one read call */
 #define MAX_EVENTS 50
 
+static const char *default_options[] =
+{
+    "BaudRate", "9600",
+    "StopBits", "1",
+    "DataBits", "8",
+    "Parity", "Odd",
+    "Vmin", "1",
+    "Vtime", "10",
+    "FlowControl", "Xoff",
+    NULL
+};
+
 _X_EXPORT InputDriverRec WIZARDPEN =
 {
     6,
@@ -98,7 +110,11 @@
     WizardPenPreInit,
     NULL,
     NULL,
+#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) < 12
     0
+#else
+    default_options
+#endif
 };
 
 #ifdef XFree86LOADER
@@ -143,18 +159,6 @@
 }
 #endif // #ifdef XFree86LOADER
 
-static const char *default_options[] =
-{
-    "BaudRate", "9600",
-    "StopBits", "1",
-    "DataBits", "8",
-    "Parity", "Odd",
-    "Vmin", "1",
-    "Vtime", "10",
-    "FlowControl", "Xoff",
-    NULL
-};
-
 #ifdef LINUX_INPUT
 static int
 IsUSBLine(int fd)
@@ -197,7 +201,7 @@
 static char wizardpen_name_default[10] = "  TABL";
 
 static Bool
-WizardPenAutoDevProbe(LocalDevicePtr local, int verb)
+WizardPenAutoDevProbe(InputInfoPtr local, int verb)
 {
     /* We are trying to find the right eventX device */
     int i = 0;
@@ -297,33 +301,59 @@
         || strcmp(s, "true") == 0;
 }
 
+#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) < 12
+static int
+NewWizardPenPreInit(InputDriverPtr drv, InputInfoPtr pInfo, int flags);
+
 static InputInfoPtr
 WizardPenPreInit(InputDriverPtr drv, IDevPtr dev, int flags)
 {
     LocalDevicePtr local = xf86AllocateInput(drv, 0);
-    WizardPenPrivatePtr priv = xcalloc (1, sizeof(WizardPenPrivateRec));
-    int speed;
+
+    if (!local)
+        goto SetupProc_fail;
+
+    local->name = dev->identifier;
+    local->flags = XI86_SEND_DRAG_EVENTS;
+    local->conf_idev = dev;
+
+    if (NewWizardPenPreInit(drv, local, flags) == Success)
+    {
+        local->flags |= XI86_CONFIGURED;
+        return local;
+    }
+
+    xf86DeleteInput(local, 0);
+SetupProc_fail:
+    return NULL;
+}
+
+static int
+NewWizardPenPreInit(InputDriverPtr drv, InputInfoPtr local, int flags)
+#else
+static int
+WizardPenPreInit(InputDriverPtr drv, InputInfoPtr local, int flags)
+#endif
+{
+    WizardPenPrivatePtr priv = calloc (1, sizeof(WizardPenPrivateRec));
     int msgtype;
     char *s;
+    int rc = Success;
 
-    if ((!local) || (!priv))
+    if (!priv) {
+        rc = BadAlloc;
         goto SetupProc_fail;
-
-    memset(priv, 0, sizeof(WizardPenPrivateRec));
-
-    local->name = dev->identifier;
+    }
+
     local->type_name = "WizardPen Tablet";
-    local->flags = XI86_POINTER_CAPABLE | XI86_SEND_DRAG_EVENTS;
-    local->control_proc = NULL;
-    local->close_proc = CloseProc;
-    local->switch_mode = NULL;
-    local->dev = NULL;
     local->private = priv;
-    local->private_flags = 0;
-    local->conf_idev = dev;
     local->device_control = DeviceControl;
     /*local->always_core_feedback = 0;*/
-    xf86CollectInputOptions(local, default_options, NULL);
+    xf86CollectInputOptions(local, default_options
+#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) < 12
+        , NULL
+#endif
+    );
 
     xf86OptionListReport(local->options);
 
@@ -535,12 +565,12 @@
         xf86Msg(X_CONFIG, "%s: TPCButton = %s\n", local->name, priv->tpcButton ? "on" : "off");
     }
 
-    local->history_size = xf86SetIntOption(local->options , "HistorySize", 0);
+#if 0
+    history_size = xf86SetIntOption(local->options , "HistorySize", 0);
+#endif
 
     xf86ProcessCommonOptions(local, local->options);
 
-    local->flags |= XI86_CONFIGURED;
-
     if (local->fd != -1)
     {
         RemoveEnabledDevice (local->fd);
@@ -553,7 +583,7 @@
     }
     RemoveEnabledDevice (local->fd);
     local->fd = -1;
-    return local;
+    return rc;
 
     /*
      * If something went wrong, cleanup and return NULL
@@ -564,8 +594,8 @@
     if ((priv) && (priv->buffer))
         XisbFree (priv->buffer);
     if (priv)
-        xfree (priv);
-    return NULL;
+        free (priv);
+    return rc;
 }
 
 static Bool
@@ -599,7 +629,7 @@
 DeviceOn (DeviceIntPtr dev)
 {
     char buffer[256];
-    LocalDevicePtr local = (LocalDevicePtr) dev->public.devicePrivate;
+    InputInfoPtr local = (InputInfoPtr) dev->public.devicePrivate;
     WizardPenPrivatePtr priv = (WizardPenPrivatePtr) (local->private);
 
     xf86MsgVerb(X_INFO, 4, "%s Device On\n", local->name);
@@ -642,7 +672,7 @@
 static Bool
 DeviceOff (DeviceIntPtr dev)
 {
-    LocalDevicePtr local = (LocalDevicePtr) dev->public.devicePrivate;
+    InputInfoPtr local = (InputInfoPtr) dev->public.devicePrivate;
     WizardPenPrivatePtr priv = (WizardPenPrivatePtr) (local->private);
 
     xf86MsgVerb(X_INFO, 4, "%s Device Off\n", local->name);
@@ -667,7 +697,7 @@
 static Bool
 DeviceClose (DeviceIntPtr dev)
 {
-    LocalDevicePtr local = (LocalDevicePtr) dev->public.devicePrivate;
+    InputInfoPtr local = (InputInfoPtr) dev->public.devicePrivate;
 
     xf86MsgVerb(X_INFO, 4, "%s Device Close\n", local->name);
 
@@ -677,7 +707,7 @@
 static void
 ControlProc(DeviceIntPtr dev, PtrCtrl *ctrl)
 {
-    LocalDevicePtr local = (LocalDevicePtr) dev->public.devicePrivate;
+    InputInfoPtr local = (InputInfoPtr) dev->public.devicePrivate;
 
     xf86MsgVerb(X_INFO, 4, "%s Control Proc\n", local->name);
 }
@@ -686,7 +716,7 @@
 DeviceInit (DeviceIntPtr dev)
 {
     int rx, ry;
-    LocalDevicePtr local = (LocalDevicePtr) dev->public.devicePrivate;
+    InputInfoPtr local = (InputInfoPtr) dev->public.devicePrivate;
     WizardPenPrivatePtr priv = (WizardPenPrivatePtr) (local->private);
     priv->oldX = 0;
     priv->oldY = 0;
@@ -732,7 +762,7 @@
 #if GET_ABI_MAJOR(ABI_XINPUT_VERSION) < 3
         xf86GetMotionEvents,
 #endif
-        local->history_size,
+        GetMotionHistorySize(),
         ((priv->flags & ABSOLUTE_FLAG)? Absolute: Relative)|OutOfProximity) == FALSE)
     {
         xf86Msg(X_ERROR, "%s: unable to allocate ValuatorClassDeviceStruct\n", local->name);
@@ -764,7 +794,11 @@
                 maxReportX,
                 1000,       /* resolution */
                 0,          /* min_res */
-                1000);      /* max_res */
+                1000        /* max_res */
+#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 12
+        	, (priv->flags & ABSOLUTE_FLAG)? Absolute: Relative
+#endif
+		);
         InitValuatorAxisStruct(dev,
                 1,
 #if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 7
@@ -774,7 +808,11 @@
                 maxReportY,
                 1000,       /* resolution */
                 0,          /* min_res */
-                1000);      /* max_res */
+                1000        /* max_res */
+#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 12
+        	, (priv->flags & ABSOLUTE_FLAG)? Absolute: Relative
+#endif
+		);
         InitValuatorAxisStruct(dev,
                 2,
 #if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 7
@@ -784,7 +822,11 @@
                 1023,       /* max val */
                 1000,       /* resolution */
                 0,          /* min_res */
-                1000);      /* max_res */
+                1000        /* max_res */
+#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 12
+        	, (priv->flags & ABSOLUTE_FLAG)? Absolute: Relative
+#endif
+		);
 
         if (priv->rotate90) {
             int tempval;
@@ -826,7 +868,7 @@
 #ifdef LINUX_INPUT
 #define set_bit(byte,nb,bit)    (bit ? byte | (1<<nb) : byte & (~(1<<nb)))
 static void
-USBReadInput (LocalDevicePtr local)
+USBReadInput (InputInfoPtr local)
 {
     int len;
     struct input_event * event;
@@ -1230,11 +1272,6 @@
 }
 #endif // #ifdef LINUX_INPUT
 
-static void
-CloseProc (LocalDevicePtr local)
-{
-}
-
 #define WriteString(str)\
     XisbWrite (priv->buffer, (unsigned char *)(str), strlen(str))
 
@@ -1281,7 +1318,7 @@
 
 #ifdef LINUX_INPUT
 static Bool
-USBQueryHardware (LocalDevicePtr local)
+USBQueryHardware (InputInfoPtr local)
 {
     WizardPenPrivatePtr priv = (WizardPenPrivatePtr) local->private;
     unsigned long   bit[EV_MAX][NBITS(KEY_MAX)];

=== modified file 'src/wizardpen.h'
--- src/wizardpen.h	2010-03-27 14:38:25 +0000
+++ src/wizardpen.h	2011-04-24 09:19:16 +0000
@@ -131,18 +131,20 @@
 static Bool DeviceOff (DeviceIntPtr);
 static Bool DeviceClose (DeviceIntPtr);
 static Bool DeviceInit (DeviceIntPtr);
-static void CloseProc (LocalDevicePtr);
 static Bool QueryHardware (WizardPenPrivatePtr);
 static void NewPacket (WizardPenPrivatePtr priv);
 static Bool WizardPenGetPacket (WizardPenPrivatePtr);
+#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) < 12
 static InputInfoPtr WizardPenPreInit(InputDriverPtr, IDevPtr , int);
+#else
+static int WizardPenPreInit(InputDriverPtr, InputInfoPtr, int);
+#endif
 
 #ifdef LINUX_INPUT
-    static void USBReadInput (LocalDevicePtr);
-    static Bool USBQueryHardware (LocalDevicePtr);
+    static void USBReadInput (InputInfoPtr);
+    static Bool USBQueryHardware (InputInfoPtr);
     static int IsUSBLine(int);
-    static Bool WizardPenAutoDevProbe(LocalDevicePtr, int);
+    static Bool WizardPenAutoDevProbe(InputInfoPtr, int);
 #endif
-
 
 #endif

