diff --git a/Telegram/SourceFiles/ui/text/text_block.cpp b/Telegram/SourceFiles/ui/text/text_block.cpp
index f828a2f..2677362 100644
--- a/Telegram/SourceFiles/ui/text/text_block.cpp	2016-05-19 01:58:37.050757683 +0600
+++ b/Telegram/SourceFiles/ui/text/text_block.cpp	2016-05-19 01:58:52.673087992 +0600
@@ -332,21 +332,6 @@
 		QString part = str.mid(_from, length);
 		QStackTextEngine engine(part, blockFont->f);
 		engine.itemize();
-
-		QTextLayout layout(&engine);
-		layout.beginLayout();
-		layout.createLine();
-
-		bool logCrashString = (rand_value<uchar>() % 4 == 1);
-		if (logCrashString) {
-			SignalHandlers::setCrashAnnotationRef("CrashString", &str);
-		}
-		BlockParser parser(&engine, this, minResizeWidth, _from, part);
-		if (logCrashString) {
-			SignalHandlers::clearCrashAnnotationRef("CrashString");
-		}
-
-		layout.endLayout();
 	}
 }
 
diff --git a/Telegram/SourceFiles/ui/text/text.cpp b/Telegram/SourceFiles/ui/text/text.cpp
index f828a2f..2677362 100644
--- a/Telegram/SourceFiles/ui/text/text.cpp
+++ b/Telegram/SourceFiles/ui/text/text.cpp
@@ -1488,13 +1488,6 @@ public:
 				return false;
 			} else if (_p) {
 				QTextCharFormat format;
-				QTextItemInt gf(glyphs.mid(glyphsStart, glyphsEnd - glyphsStart),
-								&_e->fnt, engine.layoutData->string.unicode() + itemStart,
-								itemEnd - itemStart, engine.fontEngine(si), format);
-				gf.logClusters = logClusters + itemStart - si.position;
-				gf.width = itemWidth;
-				gf.justified = false;
-				gf.initWithScriptItem(si);
 				if (_localFrom + itemStart < _selection.to && _localFrom + itemEnd > _selection.from) {
 					QFixed selX = x, selWidth = itemWidth;
 					if (_localFrom + itemEnd > _selection.to || _localFrom + itemStart < _selection.from) {
@@ -1534,8 +1527,6 @@ public:
 					if (rtl) selX = x + itemWidth - (selX - x) - selWidth;
 					_p->fillRect(QRectF(selX.toReal(), _y + _yDelta, selWidth.toReal(), _fontHeight), _textStyle->selectBg->b);
 				}
-
-				_p->drawTextItem(QPointF(x.toReal(), textY), gf);
 			}
 
 			x += itemWidth;

